THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(18) & _f(39) & WellDefinedness_getelem.1,(_f(59) => _f(72));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & WellDefinedness_remove.6,(_f(59) => _f(71));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & WellDefinedness_remove.5,(_f(59) => _f(70));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & WellDefinedness_remove.4,(_f(59) => _f(61));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & WellDefinedness_remove.3,(_f(59) => _f(69));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & WellDefinedness_remove.2,(_f(59) => _f(63));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & WellDefinedness_remove.1,(_f(59) => _f(68));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & WellDefinedness_append.3,(_f(59) => _f(63));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & WellDefinedness_append.2,(_f(59) => _f(67));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & WellDefinedness_append.1,(_f(59) => _f(66));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.8,(_f(58) & _f(4) & _f(59) => _f(61));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.7,(_f(58) & _f(4) & _f(59) => _f(65));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.6,(_f(58) & _f(4) & _f(59) => _f(63));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.5,(_f(58) & _f(4) & _f(59) => _f(64));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.4,(_f(4) & _f(59) => _f(63));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.3,(_f(4) & _f(59) => _f(62));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.2,(_f(4) & _f(59) => _f(61));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.1,(_f(4) & _f(59) => _f(60));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & remove.6,(_f(29) & _f(9) & _f(26) => _f(35));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & remove.5,(_f(29) & _f(9) & _f(16) => _f(34));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & remove.4,(_f(29) & _f(9) & _f(23) => _f(33));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & remove.3,(_f(29) & _f(9) & _f(14) => _f(32));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & remove.2,(_f(29) & _f(9) & _f(12) => _f(31));
_f(1) & _f(2) & _f(3) & _f(18) & _f(28) & remove.1,(_f(29) & _f(9) & _f(10) => _f(30));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & append.6,(_f(9) & _f(26) => _f(27));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & append.5,(_f(9) & _f(16) => _f(25));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & append.4,(_f(9) & _f(23) => _f(24));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & append.3,(_f(9) & _f(14) => _f(22));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & append.2,(_f(9) & _f(12) => _f(21));
_f(1) & _f(2) & _f(3) & _f(18) & _f(19) & append.1,(_f(9) & _f(10) => _f(20));
_f(1) & _f(2) & Initialisation.4,(_f(8) & _f(9) & _f(16) => _f(17));
_f(1) & _f(2) & Initialisation.3,(_f(8) & _f(9) & _f(14) => _f(15));
_f(1) & _f(2) & Initialisation.2,(_f(8) & _f(9) & _f(12) => _f(13));
_f(1) & _f(2) & Initialisation.1,(_f(8) & _f(9) & _f(10) => _f(11));
_f(1) & _f(2) & _f(3) & AssertionLemmas.2,(_f(4) & _f(5) => _f(7));
_f(1) & _f(2) & _f(3) & AssertionLemmas.1,(_f(4) & _f(5) => _f(6))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
ITEMS: FIN(INTEGER) & not(ITEMS = {});
content : seq(ITEMS) & content : NATURAL-{0} +-> ITEMS & content ~ : ITEMS +-> NATURAL-{0} & ((content) : (iseq(ITEMS))) & ((anchor) : (ran(content))) & next : ran(content) +-> ran(content) & next : ran(content) --> ran(content) & next : ran(content) +->> ran(content) & dom(next) = ran(content) & ran(next) = ran(content) & ((next) : (((ran(content)) -->> (ran(content))))) & previous : ran(content) +-> ran(content) & previous : ran(content) --> ran(content) & previous : ran(content) +->> ran(content) & dom(previous) = ran(content) & ran(previous) = ran(content) & ((previous) : (((ran(content)) -->> (ran(content))))) & ((((next) ; (previous))) = (id(ran(content)))) & ((((previous) ; (next))) = (id(ran(content))));
((item) : (ran(content)));
"Assertion is verified";
(((previous )((next )(item))) = (item));
(((next )((previous )(item))) = (item));
((item) : (ITEMS));
"Invariant is preserved";
"Check invariant ((content) : (iseq(ITEMS)))";
(([item]) : (iseq(ITEMS)));
"Check invariant ((anchor) : (ran(content)))";
((item) : (ran([item])));
"Check invariant ((next) : (((ran(content)) -->> (ran(content)))))";
(({((item) |-> (item))}) : (((ran([item])) -->> (ran([item])))));
"Check invariant ((((next) ; (previous))) = (id(ran(content))))";
(((({((item) |-> (item))}) ; ({((item) |-> (item))}))) = (id(ran([item]))));
!(item).(((((item) : (ran(content)))) => ((((previous )((next )(item))) = (item))))) & !(item).(((((item) : (ran(content)))) => ((((next )((previous )(item))) = (item)))));
((ii) : ((ITEMS - ran(content))));
((((content) <- (ii))) : (iseq(ITEMS)));
((anchor) : (ran(((content) <- (ii)))));
((((next) <+ ({((ii) |-> (anchor))}\/{(((previous )(anchor)) |-> (ii))}))) : (((ran(((content) <- (ii)))) -->> (ran(((content) <- (ii)))))));
"Check invariant ((previous) : (((ran(content)) -->> (ran(content)))))";
((((previous) <+ ({((anchor) |-> (ii))}\/{((ii) |-> ((previous )(anchor)))}))) : (((ran(((content) <- (ii)))) -->> (ran(((content) <- (ii)))))));
((((((next) <+ ({((ii) |-> (anchor))}\/{(((previous )(anchor)) |-> (ii))}))) ; (((previous) <+ ({((anchor) |-> (ii))}\/{((ii) |-> ((previous )(anchor)))}))))) = (id(ran(((content) <- (ii))))));
"Check invariant ((((previous) ; (next))) = (id(ran(content))))";
((((((previous) <+ ({((anchor) |-> (ii))}\/{((ii) |-> ((previous )(anchor)))}))) ; (((next) <+ ({((ii) |-> (anchor))}\/{(((previous )(anchor)) |-> (ii))}))))) = (id(ran(((content) <- (ii))))));
((ii) : ((ran(content) - {anchor})));
((xx) = (((content)~ )(ii)));
((((((content) /|\ ((xx - 1)))) ^ (((content) \|/ (xx))))) : (iseq(ITEMS)));
((anchor) : (ran(((((content) /|\ ((xx - 1)))) ^ (((content) \|/ (xx)))))));
(((((({ii}) <<| (next))) <+ ({(((previous )(ii)) |-> ((next )(ii)))}))) : (((ran(((((content) /|\ ((xx - 1)))) ^ (((content) \|/ (xx)))))) -->> (ran(((((content) /|\ ((xx - 1)))) ^ (((content) \|/ (xx)))))))));
(((((({ii}) <<| (previous))) <+ ({(((next )(ii)) |-> ((previous )(ii)))}))) : (((ran(((((content) /|\ ((xx - 1)))) ^ (((content) \|/ (xx)))))) -->> (ran(((((content) /|\ ((xx - 1)))) ^ (((content) \|/ (xx)))))))));
(((((((({ii}) <<| (next))) <+ ({(((previous )(ii)) |-> ((next )(ii)))}))) ; ((((({ii}) <<| (previous))) <+ ({(((next )(ii)) |-> ((previous )(ii)))}))))) = (id(ran(((((content) /|\ ((xx - 1)))) ^ (((content) \|/ (xx))))))));
(((((((({ii}) <<| (previous))) <+ ({(((next )(ii)) |-> ((previous )(ii)))}))) ; ((((({ii}) <<| (next))) <+ ({(((previous )(ii)) |-> ((next )(ii)))}))))) = (id(ran(((((content) /|\ ((xx - 1)))) ^ (((content) \|/ (xx))))))));
((aa) : (ITEMS));
((aa) : (ran(content)));
not(((aa) : (ran(content))));
((ii) : (dom(content)));
((((next) ; (previous))) = (id(ran(content))));
previous : ran(content) +-> ran(content);
previous : ran(content) --> ran(content);
previous : ran(content) +->> ran(content);
dom(previous) = ran(content);
ran(previous) = ran(content);
((previous) : (((ran(content)) -->> (ran(content)))));
next : ran(content) +-> ran(content);
next : ran(content) --> ran(content);
next : ran(content) +->> ran(content);
dom(next) = ran(content);
ran(next) = ran(content);
((next) : (((ran(content)) -->> (ran(content)))));
((anchor) : (ran(content)));
content : seq(ITEMS);
content : NATURAL-{0} +-> ITEMS;
content ~ : ITEMS +-> NATURAL-{0};
((content) : (iseq(ITEMS)));
!(item).(((((item) : (ran(content)))) => ((((previous )((next )(item))) = (item)))));
"Well definedness";
((item) : (dom(next)));
((next) : (((dom(next)) +-> (ran(next)))));
(((next )(item)) : (dom(previous)));
((previous) : (((dom(previous)) +-> (ran(previous)))));
((item) : (dom(previous)));
(((previous )(item)) : (dom(next)));
((content) : (seq(ran(content))));
((anchor) : (dom(previous)));
((ii) : (dom(previous)));
((ii) : (dom(next)));
((ii) : (dom((content)~)));
(((content)~) : (((dom((content)~)) +-> (ran((content)~)))));
((content) : (((dom(content)) +-> (ran(content)))))
END
&
THEORY EnumerateX
END
