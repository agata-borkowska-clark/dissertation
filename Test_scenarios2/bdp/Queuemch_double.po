THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & WellDefinedness_remove.4,(_f(56) => _f(58));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & WellDefinedness_remove.3,(_f(56) => _f(65));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & WellDefinedness_remove.2,(_f(56) => _f(60));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & WellDefinedness_remove.1,(_f(56) => _f(64));
_f(1) & _f(2) & _f(3) & _f(20) & _f(21) & WellDefinedness_append.2,(_f(56) => _f(60));
_f(1) & _f(2) & _f(3) & _f(20) & _f(21) & WellDefinedness_append.1,(_f(56) => _f(63));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.8,(_f(55) & _f(4) & _f(56) => _f(58));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.7,(_f(55) & _f(4) & _f(56) => _f(62));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.6,(_f(55) & _f(4) & _f(56) => _f(60));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.5,(_f(55) & _f(4) & _f(56) => _f(61));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.4,(_f(4) & _f(56) => _f(60));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.3,(_f(4) & _f(56) => _f(59));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.2,(_f(4) & _f(56) => _f(58));
_f(1) & _f(2) & _f(3) & WellDefinednessAssertions.1,(_f(4) & _f(56) => _f(57));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & remove.7,(_f(9) & _f(29) => _f(38));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & remove.6,(_f(9) & _f(18) => _f(37));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & remove.5,(_f(9) & _f(26) => _f(36));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & remove.4,(_f(9) & _f(16) => _f(35));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & remove.3,(_f(9) & _f(14) => _f(34));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & remove.2,(_f(9) & _f(12) => _f(33));
_f(1) & _f(2) & _f(3) & _f(20) & _f(31) & remove.1,(_f(9) & _f(10) => _f(32));
_f(1) & _f(2) & _f(3) & _f(20) & _f(21) & append.7,(_f(9) & _f(29) => _f(30));
_f(1) & _f(2) & _f(3) & _f(20) & _f(21) & append.6,(_f(9) & _f(18) => _f(28));
_f(1) & _f(2) & _f(3) & _f(20) & _f(21) & append.5,(_f(9) & _f(26) => _f(27));
_f(1) & _f(2) & _f(3) & _f(20) & _f(21) & append.4,(_f(9) & _f(16) => _f(25));
_f(1) & _f(2) & _f(3) & _f(20) & _f(21) & append.3,(_f(9) & _f(14) => _f(24));
_f(1) & _f(2) & _f(3) & _f(20) & _f(21) & append.2,(_f(9) & _f(12) => _f(23));
_f(1) & _f(2) & _f(3) & _f(20) & _f(21) & append.1,(_f(9) & _f(10) => _f(22));
_f(1) & _f(2) & Initialisation.5,(_f(8) & _f(9) & _f(18) => _f(19));
_f(1) & _f(2) & Initialisation.4,(_f(8) & _f(9) & _f(16) => _f(17));
_f(1) & _f(2) & Initialisation.3,(_f(8) & _f(9) & _f(14) => _f(15));
_f(1) & _f(2) & Initialisation.2,(_f(8) & _f(9) & _f(12) => _f(13));
_f(1) & _f(2) & Initialisation.1,(_f(8) & _f(9) & _f(10) => _f(11));
_f(1) & _f(2) & _f(3) & AssertionLemmas.2,(_f(4) & _f(5) => _f(7));
_f(1) & _f(2) & _f(3) & AssertionLemmas.1,(_f(4) & _f(5) => _f(6))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
ITEMS: FIN(INTEGER) & not(ITEMS = {});
content : POW( ITEMS) & ((content) : (FIN(content))) & ((anchor) : (content)) & next : content +-> content & next : content --> content & next : content +->> content & dom(next) = content & ran(next) = content & ((next) : (((content) -->> (content)))) & previous : content +-> content & previous : content --> content & previous : content +->> content & dom(previous) = content & ran(previous) = content & ((previous) : (((content) -->> (content)))) & ((((next) ; (previous))) = (id(content))) & ((((previous) ; (next))) = (id(content)));
((item) : (content));
"Assertion is verified";
(((previous )((next )(item))) = (item));
(((next )((previous )(item))) = (item));
((item) : (ITEMS));
"Invariant is preserved";
"Check invariant content : POW( ITEMS)";
{item} : POW( ITEMS);
"Check invariant ((content) : (FIN(content)))";
(({item}) : (FIN({item})));
"Check invariant ((anchor) : (content))";
((item) : ({item}));
"Check invariant ((next) : (((content) -->> (content))))";
(({((item) |-> (item))}) : ((({item}) -->> ({item}))));
"Check invariant ((((next) ; (previous))) = (id(content)))";
(((({((item) |-> (item))}) ; ({((item) |-> (item))}))) = (id({item})));
!(item).(((((item) : (content))) => ((((previous )((next )(item))) = (item))))) & !(item).(((((item) : (content))) => ((((next )((previous )(item))) = (item)))));
((ii) : ((ITEMS - content)));
((content) \/ ({ii})) : POW( ITEMS);
((((content) \/ ({ii}))) : (FIN(((content) \/ ({ii})))));
((anchor) : (((content) \/ ({ii}))));
((((next) <+ ({((ii) |-> (anchor))}\/{(((previous )(anchor)) |-> (ii))}))) : (((((content) \/ ({ii}))) -->> (((content) \/ ({ii}))))));
"Check invariant ((previous) : (((content) -->> (content))))";
((((previous) <+ ({((anchor) |-> (ii))}\/{((ii) |-> ((previous )(anchor)))}))) : (((((content) \/ ({ii}))) -->> (((content) \/ ({ii}))))));
((((((next) <+ ({((ii) |-> (anchor))}\/{(((previous )(anchor)) |-> (ii))}))) ; (((previous) <+ ({((anchor) |-> (ii))}\/{((ii) |-> ((previous )(anchor)))}))))) = (id(((content) \/ ({ii})))));
"Check invariant ((((previous) ; (next))) = (id(content)))";
((((((previous) <+ ({((anchor) |-> (ii))}\/{((ii) |-> ((previous )(anchor)))}))) ; (((next) <+ ({((ii) |-> (anchor))}\/{(((previous )(anchor)) |-> (ii))}))))) = (id(((content) \/ ({ii})))));
((ii) : ((content - {anchor})));
(content - {ii}) : POW( ITEMS);
(((content - {ii})) : (FIN((content - {ii}))));
((anchor) : ((content - {ii})));
(((((({ii}) <<| (next))) <+ ({(((previous )(ii)) |-> ((next )(ii)))}))) : ((((content - {ii})) -->> ((content - {ii})))));
(((((({ii}) <<| (previous))) <+ ({(((next )(ii)) |-> ((previous )(ii)))}))) : ((((content - {ii})) -->> ((content - {ii})))));
(((((((({ii}) <<| (next))) <+ ({(((previous )(ii)) |-> ((next )(ii)))}))) ; ((((({ii}) <<| (previous))) <+ ({(((next )(ii)) |-> ((previous )(ii)))}))))) = (id((content - {ii}))));
(((((((({ii}) <<| (previous))) <+ ({(((next )(ii)) |-> ((previous )(ii)))}))) ; ((((({ii}) <<| (next))) <+ ({(((previous )(ii)) |-> ((next )(ii)))}))))) = (id((content - {ii}))));
((((next) ; (previous))) = (id(content)));
previous : content +-> content;
previous : content --> content;
previous : content +->> content;
dom(previous) = content;
ran(previous) = content;
((previous) : (((content) -->> (content))));
next : content +-> content;
next : content --> content;
next : content +->> content;
dom(next) = content;
ran(next) = content;
((next) : (((content) -->> (content))));
((anchor) : (content));
((content) : (FIN(content)));
content : POW( ITEMS);
!(item).(((((item) : (content))) => ((((previous )((next )(item))) = (item)))));
"Well definedness";
((item) : (dom(next)));
((next) : (((dom(next)) +-> (ran(next)))));
(((next )(item)) : (dom(previous)));
((previous) : (((dom(previous)) +-> (ran(previous)))));
((item) : (dom(previous)));
(((previous )(item)) : (dom(next)));
((anchor) : (dom(previous)));
((ii) : (dom(previous)));
((ii) : (dom(next)))
END
&
THEORY EnumerateX
END
