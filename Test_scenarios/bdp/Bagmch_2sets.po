THEORY ProofList IS
_f(1) & _f(2) & _f(10) & _f(11) & removeitem2.3,(_f(3) & _f(8) => _f(26));
_f(1) & _f(2) & _f(10) & _f(11) & removeitem2.2,(_f(3) & _f(17) => _f(25));
_f(1) & _f(2) & _f(10) & _f(11) & removeitem2.1,(_f(3) & _f(15) => _f(24));
_f(1) & _f(2) & _f(10) & _f(11) & removeitem1.3,(_f(3) & _f(8) => _f(23));
_f(1) & _f(2) & _f(10) & _f(11) & removeitem1.2,(_f(3) & _f(6) => _f(22));
_f(1) & _f(2) & _f(10) & _f(11) & removeitem1.1,(_f(3) & _f(4) => _f(21));
_f(1) & _f(2) & _f(10) & _f(11) & additemboth.5,(_f(3) & _f(8) => _f(20));
_f(1) & _f(2) & _f(10) & _f(11) & additemboth.4,(_f(3) & _f(17) => _f(18));
_f(1) & _f(2) & _f(10) & _f(11) & additemboth.3,(_f(3) & _f(15) => _f(16));
_f(1) & _f(2) & _f(10) & _f(11) & additemboth.2,(_f(3) & _f(6) => _f(13));
_f(1) & _f(2) & _f(10) & _f(11) & additemboth.1,(_f(3) & _f(4) => _f(12));
_f(1) & _f(2) & _f(10) & _f(11) & additem2.3,(_f(3) & _f(8) => _f(19));
_f(1) & _f(2) & _f(10) & _f(11) & additem2.2,(_f(3) & _f(17) => _f(18));
_f(1) & _f(2) & _f(10) & _f(11) & additem2.1,(_f(3) & _f(15) => _f(16));
_f(1) & _f(2) & _f(10) & _f(11) & additem1.3,(_f(3) & _f(8) => _f(14));
_f(1) & _f(2) & _f(10) & _f(11) & additem1.2,(_f(3) & _f(6) => _f(13));
_f(1) & _f(2) & _f(10) & _f(11) & additem1.1,(_f(3) & _f(4) => _f(12));
_f(1) & _f(2) & Initialisation.3,(_f(3) & _f(8) => _f(9));
_f(1) & _f(2) & Initialisation.2,(_f(3) & _f(6) => _f(7));
_f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
ITEMS: FIN(INTEGER) & not(ITEMS = {});
"Invariant is preserved";
"Check invariant content1 : POW( ITEMS)";
{} : POW( ITEMS);
"Check invariant ((content1) : (FIN(content1)))";
(({}) : (FIN({})));
"Check invariant ((content1) \/ (content2)) : POW( ITEMS)";
(({}) \/ ({})) : POW( ITEMS);
content1 : POW( ITEMS) & ((content1) : (FIN(content1))) & content2 : POW( ITEMS) & ((content2) : (FIN(content2))) & ((content1) \/ (content2)) : POW( ITEMS);
((aa) : (ITEMS));
((content1) \/ ({aa})) : POW( ITEMS);
((((content1) \/ ({aa}))) : (FIN(((content1) \/ ({aa})))));
((((content1) \/ ({aa}))) \/ (content2)) : POW( ITEMS);
"Check invariant content2 : POW( ITEMS)";
((content2) \/ ({aa})) : POW( ITEMS);
"Check invariant ((content2) : (FIN(content2)))";
((((content2) \/ ({aa}))) : (FIN(((content2) \/ ({aa})))));
((content1) \/ (((content2) \/ ({aa})))) : POW( ITEMS);
((((content1) \/ ({aa}))) \/ (((content2) \/ ({aa})))) : POW( ITEMS);
(content1 - {aa}) : POW( ITEMS);
(((content1 - {aa})) : (FIN((content1 - {aa}))));
(((content1 - {aa})) \/ (content2)) : POW( ITEMS);
(content2 - {aa}) : POW( ITEMS);
(((content2 - {aa})) : (FIN((content2 - {aa}))));
((content1) \/ ((content2 - {aa}))) : POW( ITEMS);
((((aa) : (content1))) or (((aa) : (content2))));
not(((((aa) : (content1))) or (((aa) : (content2)))));
((content2) : (FIN(content2)));
content2 : POW( ITEMS);
((content1) : (FIN(content1)));
content1 : POW( ITEMS);
not(((aa) : (content1)))
END
&
THEORY EnumerateX
END
